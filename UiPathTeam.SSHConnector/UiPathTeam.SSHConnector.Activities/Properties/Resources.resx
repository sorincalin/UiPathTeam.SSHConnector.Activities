<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ContinueOnError_Description" xml:space="preserve">
    <value>If set, continue executing the remaining activities even if the current activity has failed.</value>
    <comment>property description</comment>
  </data>
  <data name="ContinueOnError_DisplayName" xml:space="preserve">
    <value>ContinueOnError</value>
    <comment>property name</comment>
  </data>
  <data name="Timeout_Description" xml:space="preserve">
    <value>Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 60000 (1 minute).</value>
    <comment>property description</comment>
  </data>
  <data name="Timeout_DisplayName" xml:space="preserve">
    <value>Timeout (milliseconds)</value>
    <comment>property name</comment>
  </data>
  <data name="Timeout_Error" xml:space="preserve">
    <value>The activity timed out and was canceled.</value>
    <comment>error message</comment>
  </data>
  <data name="Do" xml:space="preserve">
    <value>Do</value>
    <comment>generic</comment>
  </data>
  <data name="Common_Category" xml:space="preserve">
    <value>Common</value>
    <comment>category</comment>
  </data>
  <data name="Authentication_Category" xml:space="preserve">
    <value>Authentication</value>
    <comment>category</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="ValidationScope_Error" xml:space="preserve">
    <value>Cannot be used outside of a {0}.</value>
    <comment>error message; {0} is a container activity (e.g. a scope)</comment>
  </data>
  <data name="ValidationValue_Error" xml:space="preserve">
    <value>Please provide a value for {0}.</value>
    <comment>error message; {0} is the name of a missing property</comment>
  </data>
  <data name="ValidationExclusiveProperties_Error" xml:space="preserve">
    <value>Please provide a value either for {0} or {1}, but not both.</value>
    <comment>error message; {0} &amp; {1} are mutually exclusive activities</comment>
  </data>
  <data name="ValidationOverloadGroup_Error" xml:space="preserve">
    <value>Please provide values for both {0} and {1}.</value>
    <comment>error message; {0} &amp; {1} are complementary properties</comment>
  </data>
  <data name="SSHConnectScope_DisplayName" xml:space="preserve">
    <value>SSH Connect Scope</value>
    <comment>activity name</comment>
  </data>
  <data name="SSHConnectScope_Description" xml:space="preserve">
    <value />
    <comment>activity description</comment>
  </data>
  <data name="SSHConnectScope_Host_DisplayName" xml:space="preserve">
    <value>Host</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_Host_Description" xml:space="preserve">
    <value>Hostname or IP of the server to connect to.</value>
    <comment>property description</comment>
  </data>
  <data name="SSHSettings_Category" xml:space="preserve">
    <value>SSH Settings</value>
    <comment>category</comment>
  </data>
  <data name="SSHConnectScope_Port_DisplayName" xml:space="preserve">
    <value>Port</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_Port_Description" xml:space="preserve">
    <value>Port on which the SSH connection will run.</value>
    <comment>property description</comment>
  </data>
  <data name="SSHConnectScope_Username_DisplayName" xml:space="preserve">
    <value>Username</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_Username_Description" xml:space="preserve">
    <value>Username used to authenticate in the SSH connection.</value>
    <comment>property description</comment>
  </data>
  <data name="SSHConnectScope_Password_DisplayName" xml:space="preserve">
    <value>Password</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_Password_Description" xml:space="preserve">
    <value>Password used to authenticate in the SSH connection.</value>
    <comment>property description</comment>
  </data>
  <data name="SSHConnectScope_ShellExpectedPrompt_DisplayName" xml:space="preserve">
    <value>Shell Expected Prompt</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_ShellExpectedPrompt_Description" xml:space="preserve">
    <value>Regex matching the expected shell prompt. If empty, a Shell will not be created.\nExample: "[a-zA-Z0-9_.-]*@[a-zA-Z0-9_.-]*:\~.*\$ $"</value>
    <comment>property description</comment>
  </data>
  <data name="SSHTimeout_Description" xml:space="preserve">
    <value>Specifies the amount of time (in milliseconds) to wait for the SSH specific activity to run before an error is thrown. The default value is 30000 (1 minute).</value>
    <comment>property description</comment>
  </data>
  <data name="SSHTimeout_DisplayName" xml:space="preserve">
    <value>SSH Timeout (milliseconds)</value>
    <comment>property name</comment>
  </data>
  <data name="SSHTimeout_Error" xml:space="preserve">
    <value>The SSH activity timed out and was canceled.</value>
    <comment>error message</comment>
  </data>
  <data name="SSHConnectScope_ProxyHost_DisplayName" xml:space="preserve">
    <value>Proxy Host</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_ProxyHost_Description" xml:space="preserve">
    <value>Proxy hostname or IP to be used for the SSH connection.</value>
    <comment>property description</comment>
  </data>
  <data name="ProxySettings_Category" xml:space="preserve">
    <value>Proxy Settings</value>
    <comment>category</comment>
  </data>
  <data name="SSHConnectScope_ProxyPort_DisplayName" xml:space="preserve">
    <value>Proxy Port</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_ProxyPort_Description" xml:space="preserve">
    <value>Proxy port to be used for the SSH connection.</value>
    <comment>property description</comment>
  </data>
  <data name="SSHConnectScope_ProxyUsername_DisplayName" xml:space="preserve">
    <value>Proxy Username</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_ProxyUsername_Description" xml:space="preserve">
    <value>Proxy username to be used when authenticating to the proxy server.</value>
    <comment>property description</comment>
  </data>
  <data name="SSHConnectScope_ProxyPassword_DisplayName" xml:space="preserve">
    <value>Proxy Password</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_ProxyPassword_Description" xml:space="preserve">
    <value>Proxy password to be used when authenticating to the proxy server.</value>
    <comment>property description</comment>
  </data>
  <data name="SSHConnectScope_ShellWelcomeMessage_DisplayName" xml:space="preserve">
    <value>Shell Welcome Message</value>
    <comment>property name</comment>
  </data>
  <data name="SSHConnectScope_ShellWelcomeMessage_Description" xml:space="preserve">
    <value>Welcome message from target shell connection. Will be provided only if a shell is created.</value>
    <comment>property description</comment>
  </data>
  <data name="Authentication_Category" xml:space="preserve">
    <value>Authentication</value>
    <comment>category</comment>
  </data>
  <data name="Common_Category" xml:space="preserve">
    <value>Common</value>
    <comment>category</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="ValidationScope_Error" xml:space="preserve">
    <value>Cannot be used outside of a {0}.</value>
    <comment>error message; {0} is a container activity (e.g. a scope)</comment>
  </data>
  <data name="ValidationValue_Error" xml:space="preserve">
    <value>Please provide a value for {0}.</value>
    <comment>error message; {0} is the name of a missing property</comment>
  </data>
  <data name="ValidationExclusiveProperties_Error" xml:space="preserve">
    <value>Please provide a value either for {0} or {1}, but not both.</value>
    <comment>error message; {0} &amp; {1} are mutually exclusive activities</comment>
  </data>
  <data name="ValidationOverloadGroup_Error" xml:space="preserve">
    <value>Please provide values for both {0} and {1}.</value>
    <comment>error message; {0} &amp; {1} are complementary properties</comment>
  </data>
  <data name="SSHRunShellCommand_DisplayName" xml:space="preserve">
    <value>SSH Run Shell Command</value>
    <comment>activity name</comment>
  </data>
  <data name="SSHRunShellCommand_Description" xml:space="preserve">
    <value>Runs a command in an active Shell Stream</value>
    <comment>activity description</comment>
  </data>
  <data name="SSHRunShellCommand_Command_DisplayName" xml:space="preserve">
    <value>Command</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunShellCommand_Command_Description" xml:space="preserve">
    <value>Command to be sent over the SSH connection.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunShellCommand_CheckExitCode_DisplayName" xml:space="preserve">
    <value>Check Exit Code</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunShellCommand_CheckExitCode_Description" xml:space="preserve">
    <value>Check exit code.</value>
    <comment>property description</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunShellCommand_ShellStream_DisplayName" xml:space="preserve">
    <value>Shell Stream</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunShellCommand_ShellStream_Description" xml:space="preserve">
    <value>Inferred from SSH Connect Scope by default. ShellStream object to be used.</value>
    <comment>property description</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunShellCommand_ShellExpectedPrompt_DisplayName" xml:space="preserve">
    <value>Shell Expected Prompt</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunShellCommand_ShellExpectedPrompt_Description" xml:space="preserve">
    <value>Inferred from SSH Connect Scope by default. Regex matching the expected shell prompt to be used. Example: "[a-zA-Z0-9_.-]*@[a-zA-Z0-9_.-]*:\~.*\$ $"</value>
    <comment>property description</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunShellCommand_Result_DisplayName" xml:space="preserve">
    <value>Result</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunShellCommand_Result_Description" xml:space="preserve">
    <value>Text result of the command.</value>
    <comment>property description</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunCommand_DisplayName" xml:space="preserve">
    <value>SSH Run Command</value>
    <comment>activity name</comment>
  </data>
  <data name="SSHRunCommand_Description" xml:space="preserve">
    <value>Runs a command without an active Shell Stream. There is no persistance between the commands.</value>
    <comment>activity description</comment>
  </data>
  <data name="SSHRunCommand_Command_DisplayName" xml:space="preserve">
    <value>Command</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunCommand_Command_Description" xml:space="preserve">
    <value>Command to be sent over the SSH connection. Multiple commands can be linked together according to the target's machine specific OS.</value>
    <comment>property description</comment>
  </data>
  <data name="Input_Category" xml:space="preserve">
    <value>Input</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunCommand_SSHClient_DisplayName" xml:space="preserve">
    <value>SSH Client</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunCommand_SSHClient_Description" xml:space="preserve">
    <value>SshClient object to be used when not in a SSH Connect Scope.</value>
    <comment>property description</comment>
  </data>
  <data name="Options_Category" xml:space="preserve">
    <value>Options</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunCommand_ExitCode_DisplayName" xml:space="preserve">
    <value>Exit Code</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunCommand_ExitCode_Description" xml:space="preserve">
    <value>Status code of the command.</value>
    <comment>property description</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunCommand_Result_DisplayName" xml:space="preserve">
    <value>Result</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunCommand_Result_Description" xml:space="preserve">
    <value>Text result of the command.</value>
    <comment>property description</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
  <data name="SSHRunCommand_Error_DisplayName" xml:space="preserve">
    <value>Error</value>
    <comment>property name</comment>
  </data>
  <data name="SSHRunCommand_Error_Description" xml:space="preserve">
    <value>Execution error text of the command</value>
    <comment>property description</comment>
  </data>
  <data name="Output_Category" xml:space="preserve">
    <value>Output</value>
    <comment>category</comment>
  </data>
</root>