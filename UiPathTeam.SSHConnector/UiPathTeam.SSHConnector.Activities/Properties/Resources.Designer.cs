//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UiPathTeam.SSHConnector.Activities.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UiPathTeam.SSHConnector.Activities.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authentication.
        /// </summary>
        public static string Authentication_Category {
            get {
                return ResourceManager.GetString("Authentication_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Common.
        /// </summary>
        public static string Common_Category {
            get {
                return ResourceManager.GetString("Common_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If set, continue executing the remaining activities even if the current activity has failed..
        /// </summary>
        public static string ContinueOnError_Description {
            get {
                return ResourceManager.GetString("ContinueOnError_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ContinueOnError.
        /// </summary>
        public static string ContinueOnError_DisplayName {
            get {
                return ResourceManager.GetString("ContinueOnError_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do.
        /// </summary>
        public static string Do {
            get {
                return ResourceManager.GetString("Do", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Input.
        /// </summary>
        public static string Input_Category {
            get {
                return ResourceManager.GetString("Input_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Options.
        /// </summary>
        public static string Options_Category {
            get {
                return ResourceManager.GetString("Options_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output.
        /// </summary>
        public static string Output_Category {
            get {
                return ResourceManager.GetString("Output_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Settings.
        /// </summary>
        public static string ProxySettings_Category {
            get {
                return ResourceManager.GetString("ProxySettings_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to .
        /// </summary>
        public static string SSHConnectScope_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH Connect Scope.
        /// </summary>
        public static string SSHConnectScope_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hostname or IP of the server to connect to..
        /// </summary>
        public static string SSHConnectScope_Host_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_Host_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Host.
        /// </summary>
        public static string SSHConnectScope_Host_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_Host_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password used to authenticate in the SSH connection..
        /// </summary>
        public static string SSHConnectScope_Password_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_Password_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Password.
        /// </summary>
        public static string SSHConnectScope_Password_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_Password_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port on which the SSH connection will run..
        /// </summary>
        public static string SSHConnectScope_Port_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_Port_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Port.
        /// </summary>
        public static string SSHConnectScope_Port_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_Port_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy hostname or IP to be used for the SSH connection..
        /// </summary>
        public static string SSHConnectScope_ProxyHost_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyHost_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Host.
        /// </summary>
        public static string SSHConnectScope_ProxyHost_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyHost_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy password to be used when authenticating to the proxy server..
        /// </summary>
        public static string SSHConnectScope_ProxyPassword_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyPassword_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Password.
        /// </summary>
        public static string SSHConnectScope_ProxyPassword_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyPassword_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy port to be used for the SSH connection..
        /// </summary>
        public static string SSHConnectScope_ProxyPort_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyPort_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Port.
        /// </summary>
        public static string SSHConnectScope_ProxyPort_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyPort_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy username to be used when authenticating to the proxy server..
        /// </summary>
        public static string SSHConnectScope_ProxyUsername_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyUsername_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Proxy Username.
        /// </summary>
        public static string SSHConnectScope_ProxyUsername_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_ProxyUsername_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Regex matching the expected shell prompt. If empty, a Shell will not be created.\nExample: &quot;[a-zA-Z0-9_.-]*@[a-zA-Z0-9_.-]*:\~.*\$ $&quot;.
        /// </summary>
        public static string SSHConnectScope_ShellExpectedPrompt_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_ShellExpectedPrompt_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shell Expected Prompt.
        /// </summary>
        public static string SSHConnectScope_ShellExpectedPrompt_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_ShellExpectedPrompt_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome message from target shell connection. Will be provided only if a shell is created..
        /// </summary>
        public static string SSHConnectScope_ShellWelcomeMessage_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_ShellWelcomeMessage_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shell Welcome Message.
        /// </summary>
        public static string SSHConnectScope_ShellWelcomeMessage_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_ShellWelcomeMessage_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username used to authenticate in the SSH connection..
        /// </summary>
        public static string SSHConnectScope_Username_Description {
            get {
                return ResourceManager.GetString("SSHConnectScope_Username_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Username.
        /// </summary>
        public static string SSHConnectScope_Username_DisplayName {
            get {
                return ResourceManager.GetString("SSHConnectScope_Username_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command to be sent over the SSH connection. Multiple commands can be linked together according to the target&apos;s machine specific OS..
        /// </summary>
        public static string SSHRunCommand_Command_Description {
            get {
                return ResourceManager.GetString("SSHRunCommand_Command_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command.
        /// </summary>
        public static string SSHRunCommand_Command_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunCommand_Command_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runs a command without an active Shell Stream. There is no persistance between the commands..
        /// </summary>
        public static string SSHRunCommand_Description {
            get {
                return ResourceManager.GetString("SSHRunCommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH Run Command.
        /// </summary>
        public static string SSHRunCommand_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunCommand_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Execution error text of the command.
        /// </summary>
        public static string SSHRunCommand_Error_Description {
            get {
                return ResourceManager.GetString("SSHRunCommand_Error_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        public static string SSHRunCommand_Error_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunCommand_Error_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status code of the command..
        /// </summary>
        public static string SSHRunCommand_ExitCode_Description {
            get {
                return ResourceManager.GetString("SSHRunCommand_ExitCode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exit Code.
        /// </summary>
        public static string SSHRunCommand_ExitCode_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunCommand_ExitCode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text result of the command..
        /// </summary>
        public static string SSHRunCommand_Result_Description {
            get {
                return ResourceManager.GetString("SSHRunCommand_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string SSHRunCommand_Result_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunCommand_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SshClient object to be used when not in a SSH Connect Scope..
        /// </summary>
        public static string SSHRunCommand_SSHClient_Description {
            get {
                return ResourceManager.GetString("SSHRunCommand_SSHClient_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH Client.
        /// </summary>
        public static string SSHRunCommand_SSHClient_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunCommand_SSHClient_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check exit code..
        /// </summary>
        public static string SSHRunShellCommand_CheckExitCode_Description {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_CheckExitCode_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Check Exit Code.
        /// </summary>
        public static string SSHRunShellCommand_CheckExitCode_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_CheckExitCode_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command to be sent over the SSH connection..
        /// </summary>
        public static string SSHRunShellCommand_Command_Description {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_Command_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command.
        /// </summary>
        public static string SSHRunShellCommand_Command_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_Command_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Runs a command in an active Shell Stream.
        /// </summary>
        public static string SSHRunShellCommand_Description {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH Run Shell Command.
        /// </summary>
        public static string SSHRunShellCommand_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text result of the command..
        /// </summary>
        public static string SSHRunShellCommand_Result_Description {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_Result_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Result.
        /// </summary>
        public static string SSHRunShellCommand_Result_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_Result_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inferred from SSH Connect Scope by default. Regex matching the expected shell prompt to be used. Example: &quot;[a-zA-Z0-9_.-]*@[a-zA-Z0-9_.-]*:\~.*\$ $&quot;.
        /// </summary>
        public static string SSHRunShellCommand_ShellExpectedPrompt_Description {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_ShellExpectedPrompt_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shell Expected Prompt.
        /// </summary>
        public static string SSHRunShellCommand_ShellExpectedPrompt_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_ShellExpectedPrompt_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inferred from SSH Connect Scope by default. ShellStream object to be used..
        /// </summary>
        public static string SSHRunShellCommand_ShellStream_Description {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_ShellStream_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shell Stream.
        /// </summary>
        public static string SSHRunShellCommand_ShellStream_DisplayName {
            get {
                return ResourceManager.GetString("SSHRunShellCommand_ShellStream_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH Settings.
        /// </summary>
        public static string SSHSettings_Category {
            get {
                return ResourceManager.GetString("SSHSettings_Category", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) to wait for the SSH specific activity to run before an error is thrown. The default value is 30000 (1 minute)..
        /// </summary>
        public static string SSHTimeout_Description {
            get {
                return ResourceManager.GetString("SSHTimeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SSH Timeout (milliseconds).
        /// </summary>
        public static string SSHTimeout_DisplayName {
            get {
                return ResourceManager.GetString("SSHTimeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The SSH activity timed out and was canceled..
        /// </summary>
        public static string SSHTimeout_Error {
            get {
                return ResourceManager.GetString("SSHTimeout_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the amount of time (in milliseconds) to wait for the activity to run before an error is thrown. The default value is 60000 (1 minute)..
        /// </summary>
        public static string Timeout_Description {
            get {
                return ResourceManager.GetString("Timeout_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeout (milliseconds).
        /// </summary>
        public static string Timeout_DisplayName {
            get {
                return ResourceManager.GetString("Timeout_DisplayName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activity timed out and was canceled..
        /// </summary>
        public static string Timeout_Error {
            get {
                return ResourceManager.GetString("Timeout_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value either for {0} or {1}, but not both..
        /// </summary>
        public static string ValidationExclusiveProperties_Error {
            get {
                return ResourceManager.GetString("ValidationExclusiveProperties_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide values for both {0} and {1}..
        /// </summary>
        public static string ValidationOverloadGroup_Error {
            get {
                return ResourceManager.GetString("ValidationOverloadGroup_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot be used outside of a {0}..
        /// </summary>
        public static string ValidationScope_Error {
            get {
                return ResourceManager.GetString("ValidationScope_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide a value for {0}..
        /// </summary>
        public static string ValidationValue_Error {
            get {
                return ResourceManager.GetString("ValidationValue_Error", resourceCulture);
            }
        }
    }
}
